services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.prod
    ports:
      - "8001:8000"
    volumes:
      - ./output:/app/output
      - ./tests:/app/tests
    environment:
      - PYTHONPATH=/app
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8001
      - LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - scraper-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend.prod
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - scraper-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  test:
    build:
      context: .
      dockerfile: Dockerfile.backend.prod
    volumes:
      - ./tests:/app/tests
      - ./output:/app/output
    environment:
      - PYTHONPATH=/app
    command: >
      sh -c "
        echo 'Waiting for backend to be ready...' &&
        while ! curl -f http://backend:8000/api/health > /dev/null 2>&1; do
          echo 'Backend not ready, waiting...' &&
          sleep 2
        done &&
        echo 'Backend is ready! Running tests...' &&
        python -m pytest tests/ -v --tb=short
      "
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - scraper-network

networks:
  scraper-network:
    driver: bridge

volumes:
  output: 